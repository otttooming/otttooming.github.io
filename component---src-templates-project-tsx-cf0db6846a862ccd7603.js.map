{"version":3,"sources":["webpack:///./src/components/TechStack/TechStack.tsx","webpack:///./src/components/MasonryGallery/MasonryGallery.tsx","webpack:///./src/templates/Project.tsx","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Wrapper","styled","ul","theme","space","m","Item","li","TechStack","items","Array","isArray","length","map","item","key","mr","s","div","Column","borderRadius","MasonryGallery","children","cols","ref","React","numCols","setNumCols","calcNumCols","Math","floor","current","offsetWidth","window","addEventListener","removeEventListener","i","forEach","child","push","createCols","fill","el","Img","GatsbyImage","StyledHeading","Heading","fontWeight","normal","components","pageQuery","Project","mdx","data","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","Logo","name","company","link","title","textMap","kind","tech","body","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","$args","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","useMDXComponents","useMDXScope","scope","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn"],"mappings":"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","file":"component---src-templates-project-tsx-cf0db6846a862ccd7603.js","sourcesContent":["import * as React from \"react\"\nimport { Link, theme } from \"@coterminous/ui\"\nimport styled from \"styled-components\"\n\nexport interface TechStackProps {\n  items?: string[]\n}\n\nconst Wrapper = styled.ul`\n  margin: ${theme.space.m} 0;\n  padding: 0;\n`\n\nconst Item = styled.li`\n  list-style: none;\n  display: inline-flex;\n`\n\nconst TechStack: React.FC<TechStackProps> = ({ items }) => {\n  if (!Array.isArray(items) || !items.length) {\n    return null\n  }\n\n  return (\n    <Wrapper>\n      {items.map(item => (\n        <Item key={item}>\n          <Link mr={theme.space.s}>{item}</Link>\n        </Item>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default TechStack\n","import styled from \"styled-components\"\nimport * as React from \"react\"\nimport { theme } from \"@coterminous/ui\"\n\nexport interface MasonryGalleryProps {}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 16px;\n  margin-top: 80px;\n`\n\nconst Column = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-auto-rows: max-content;\n`\n\nconst Item = styled.div`\n  overflow: hidden;\n  border-radius: ${theme.borderRadius.s};\n`\n\nconst MasonryGallery: React.FC<MasonryGalleryProps> = ({ children }) => {\n  const minWidth = 300\n  const cols = []\n  const ref = React.useRef(null)\n  const [numCols, setNumCols] = React.useState(3)\n\n  const calcNumCols = () =>\n    setNumCols(Math.floor(ref.current.offsetWidth / minWidth))\n\n  const createCols = () => {\n    for (let i = 0; i < numCols; i++) cols[i] = []\n\n    React.Children.forEach(children, (child, i) =>\n      cols[i % numCols].push(<Item>{child}</Item>)\n    )\n  }\n\n  React.useEffect(() => {\n    calcNumCols()\n    window.addEventListener(\"resize\", calcNumCols)\n    return () => window.removeEventListener(\"resize\", calcNumCols)\n  })\n  createCols()\n\n  return (\n    <Wrapper ref={ref}>\n      {Array(numCols)\n        .fill(null)\n        .map((el, i) => (\n          <Column key={i}>{cols[i]}</Column>\n        ))}\n    </Wrapper>\n  )\n}\n\nexport default MasonryGallery\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\"\nimport GatsbyImage from \"gatsby-image\"\nimport { theme, Heading } from \"@coterminous/ui\"\nimport TechStack from \"../components/TechStack/TechStack\"\nimport { textMap } from \"../utils/textMap\"\nimport Logo from \"../components/Logo/Logo\"\nimport MasonryGallery from \"../components/MasonryGallery/MasonryGallery\"\n\nexport interface PostProps {\n  data: any\n}\n\nconst Wrapper = styled.div`\n  max-width: 960px;\n  margin: 80px auto;\n\n  .gatsby-resp-image-wrapper {\n    width: 100%;\n  }\n\n  .gatsby-resp-image-wrapper > picture {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .gatsby-resp-image-wrapper > picture img {\n    width: 100%;\n  }\n`\n\nconst Img = styled(GatsbyImage)`\n  max-width: 1024px;\n  margin: 0 auto;\n  border-radius: ${theme.borderRadius.m};\n`\n\nconst StyledHeading = styled(Heading)`\n  font-weight: ${theme.fontWeight.normal};\n`\n\nconst components = { MasonryGallery }\n\nconst Project: React.FC<PostProps> = ({ data: { mdx } }) => {\n  const featuredImgFluid = mdx.frontmatter.featuredImage.childImageSharp.fluid\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Logo name={mdx.frontmatter.company} link={mdx.frontmatter.link} />\n\n        <StyledHeading>\n          <strong>{mdx.frontmatter.title}</strong>{\" \"}\n          {textMap(mdx.frontmatter.kind)}\n        </StyledHeading>\n        <TechStack items={mdx.frontmatter.tech} />\n      </Wrapper>\n      <Img fluid={featuredImgFluid} />\n\n      <Wrapper>\n        <MDXProvider components={components}>\n          <MDXRenderer>{mdx.body}</MDXRenderer>\n        </MDXProvider>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const pageQuery = graphql`\n  query ProjectPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        company\n        git\n        link\n        kind\n        tech\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}