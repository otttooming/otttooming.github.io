{"version":3,"sources":["webpack:///./src/pages/projects.tsx"],"names":["Item","restProps","backgroundColor","useColorMode","colorMode","as","display","listStyleType","gridGap","gridTemplateColumns","gridTemplateAreas","alignItems","padding","borderRadius","mb","_even","pageQuery","Projects","posts","data","allMdx","nodes","title","description","mt","marginX","maxWidth","px","fontWeight","theme","space","l","m","p","map","id","fields","excerpt","frontmatter","featured","image","background","fit","key","href","slug","gridArea","maxHeight","fluid","childImageSharp","link","name","company","s","textMap","kind","projectTexts"],"mappings":"qiBAwBA,IAAMA,EAAiC,SAAC,GAAqB,IAAhBC,EAAgB,oBAGrDC,EAAgC,UAFhBC,cAAdC,UAEwC,WAAa,UAE7D,OACE,YAAC,IAAD,GACEC,GAAG,KACHC,QAAQ,OACRC,cAAc,OACdC,QAAQ,iBACRC,oBAAqB,CACnB,qCACA,uCACA,wCAEFC,kBAAmB,CAAC,KAAM,KAAP,0BACnBC,WAAW,SACXT,gBAAiBA,EACjBU,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,aAAc,CAAC,EAAG,OAAQ,QAC1BC,GAAI,CAAC,OAAQ,OAAQ,SACrBC,MAAO,CACLL,kBAAmB,CAAC,KAAM,KAAP,4BAEjBT,KAgFGe,EAAY,aAkCVC,UA7G2B,SAAC,GAIrC,IAFeC,EAEf,EAHJC,KACEC,OAAUC,MAGZ,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,WAAWC,YAAY,KAElC,YAAC,IAAD,CACElB,GAAG,KACHmB,GAAG,OACHC,QAAQ,OACRC,SAAS,QACTC,GAAG,OACHC,WAAY,KAEZ,2CARF,4BAWA,YAAC,IAAD,CAAMJ,GAAIK,IAAMC,MAAMC,EAAGN,QAAQ,OAAOC,SAAS,QAAQC,GAAG,QAA5D,kEAIA,YAAC,IAAD,CAAMF,QAAQ,OAAOC,SAAS,QAAQC,GAAG,QAAzC,yGAKA,YAAC,IAAD,CACEtB,GAAG,KACH2B,EAAE,YACFC,EAAG,EACHP,SAAS,SACTC,GAAI,CAAC,EAAG,OAAQ,SAEfT,EAAMgB,KAAI,YAA0C,IAAvCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAAkB,EAChBA,EAAYC,SAAvCC,EAD2C,EAC3CA,MAAOC,EADoC,EACpCA,WAAYC,EADwB,EACxBA,IAE3B,OACE,YAAC1C,EAAD,CAAM2C,IAAKR,GACT,YAAC,IAAD,CACES,KAAMR,EAAOS,KACbvC,QAAQ,QACRwC,SAAU,CAAC,KAAM,KAAM,iBAEvB,YAAC,IAAD,CACEC,UAAU,QACVC,MAAOR,EAAMS,gBAAgBD,MAC7BP,WAAYA,EACZC,IAAKA,KAIT,YAAC,IAAD,CAAKI,SAAU,CAAC,KAAM,KAAM,YAC1B,YAAC,IAAD,CAAcF,KAAMN,EAAYY,KAAM5C,QAAQ,SAC5C,YAAC,IAAD,CAAM6C,KAAMb,EAAYc,WAG1B,YAAC,IAAD,CAASR,KAAMR,EAAOS,MACpB,YAAC,IAAD,CAASrB,GAAIK,IAAMC,MAAMuB,EAAGzB,WAAY,KACtC,0BAASU,EAAYhB,OAAgB,IACpCgC,YAAQhB,EAAYiB,KAAMC,OAI/B,YAAC,IAAD,CAAMhC,GAAIK,IAAMC,MAAMuB,GAAIhB","file":"component---src-pages-projects-tsx-e5093e2a7fa21dae7d80.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { theme } from '../utils/theme';\nimport Logo from '../components/Logo/Logo';\nimport { textMap, projectTexts } from '../utils/textMap';\nimport SEO from '../components/SEO';\nimport {\n  Heading,\n  Text,\n  useColorMode,\n  Box,\n  Link as ExternalLink,\n  PseudoBox,\n  PseudoBoxProps,\n} from '@chakra-ui/core';\nimport CoverImage from '../components/CoverImage/CoverImage';\nimport { Link as MDXLink } from '../components/MDXComponents/MDXComponents';\nimport { ProjectsListQueryQuery } from '../types';\n\nexport interface ProjectsProps {\n  data: ProjectsListQueryQuery;\n}\n\nconst Item: React.FC<PseudoBoxProps> = ({ ...restProps }) => {\n  const { colorMode } = useColorMode();\n\n  const backgroundColor = colorMode === 'light' ? ' #edf2f7' : '#2c3442';\n\n  return (\n    <PseudoBox\n      as=\"li\"\n      display=\"grid\"\n      listStyleType=\"none\"\n      gridGap=\"var(--space-l)\"\n      gridTemplateColumns={[\n        'repeat(auto-fit, minmax(260, 1fr))',\n        'repeat(auto-fit, minmax(320px, 1fr))',\n        'repeat(auto-fit, minmax(320px, 1fr))',\n      ]}\n      gridTemplateAreas={[null, null, `\"illustration content\"`]}\n      alignItems=\"center\"\n      backgroundColor={backgroundColor}\n      padding={['16px', '32px', '48px']}\n      borderRadius={[0, '16px', '16px']}\n      mb={['32px', '64px', '128px']}\n      _even={{\n        gridTemplateAreas: [null, null, `\"content illustration\"`],\n      }}\n      {...restProps}\n    />\n  );\n};\n\nconst Projects: React.FC<ProjectsProps> = ({\n  data: {\n    allMdx: { nodes: posts },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" description=\"\" />\n\n      <Heading\n        as=\"h1\"\n        mt=\"80px\"\n        marginX=\"auto\"\n        maxWidth=\"960px\"\n        px=\"16px\"\n        fontWeight={400}\n      >\n        <strong>Some projects</strong> I have been involved in\n      </Heading>\n\n      <Text mt={theme.space.l} marginX=\"auto\" maxWidth=\"960px\" px=\"16px\">\n        All of the projects have been a team collaboration and effort.\n      </Text>\n\n      <Text marginX=\"auto\" maxWidth=\"960px\" px=\"16px\">\n        I have been thoroughly fortunate to have been given the opportunity to\n        work with some amazing people.\n      </Text>\n\n      <Box\n        as=\"ol\"\n        m=\"80px auto\"\n        p={0}\n        maxWidth=\"1080px\"\n        px={[0, '16px', '16px']}\n      >\n        {posts.map(({ id, fields, excerpt, frontmatter }) => {\n          const { image, background, fit } = frontmatter.featured;\n\n          return (\n            <Item key={id}>\n              <MDXLink\n                href={fields.slug}\n                display=\"block\"\n                gridArea={[null, null, 'illustration']}\n              >\n                <CoverImage\n                  maxHeight=\"360px\"\n                  fluid={image.childImageSharp.fluid}\n                  background={background}\n                  fit={fit}\n                />\n              </MDXLink>\n\n              <Box gridArea={[null, null, 'content']}>\n                <ExternalLink href={frontmatter.link} display=\"block\">\n                  <Logo name={frontmatter.company} />\n                </ExternalLink>\n\n                <MDXLink href={fields.slug}>\n                  <Heading mt={theme.space.s} fontWeight={400}>\n                    <strong>{frontmatter.title}</strong>{' '}\n                    {textMap(frontmatter.kind, projectTexts)}\n                  </Heading>\n                </MDXLink>\n\n                <Text mt={theme.space.s}>{excerpt}</Text>\n              </Box>\n            </Item>\n          );\n        })}\n      </Box>\n    </Layout>\n  );\n};\nexport const pageQuery = graphql`\n  query ProjectsListQuery {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 72)\n        frontmatter {\n          title\n          company\n          git\n          link\n          kind\n          featured {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 476) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            background\n            fit\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\nexport default Projects;\n"],"sourceRoot":""}