{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","Wrapper","styled","header","withConfig","displayName","componentId","theme","space","l","Home","Button","List","ul","Item","li","StyledButton","Header","_ref","siteTitle","react","icon","wind","variant","onClick","navigate","book_open","defaultProps","Layout","children","data","_856328897","components_Header","site","siteMetadata","dist","style","paddingTop","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-404-js-a3e7764d291256f5637e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport { Wind, BookOpen } from \"react-feather\"\nimport { theme, Button } from \"@coterminous/ui\"\nimport { navigate } from \"gatsby\"\n\nconst Wrapper = styled.header`\n  display: flex;\n  align-self: center;\n  justify-content: space-between;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: ${theme.space.l};\n`\nconst Home = styled(Button)`\n  font-size: 18px;\n  background: transparent;\n`\n\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n`\n\nconst Item = styled.li`\n  display: flex;\n  align-self: center;\n  list-style: none;\n`\n\nconst StyledButton = styled(Button)`\n  background: transparent;\n`\n\nconst Header = ({ siteTitle }) => (\n  <Wrapper>\n    <Home icon={<Wind />} variant=\"link\" onClick={() => navigate(\"/\")}>\n      OTTO\n    </Home>\n\n    <List>\n      <Item>\n        <StyledButton\n          icon={<BookOpen />}\n          variant=\"link\"\n          onClick={() => navigate(\"/projects\")}\n        >\n          Projects\n        </StyledButton>\n      </Item>\n    </List>\n  </Wrapper>\n)\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Button, GlobalStyle } from \"@coterminous/ui\"\nimport Header from \"./Header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <GlobalStyle />\n      <div\n        style={{\n          // margin: `0 auto`,\n          // maxWidth: 960,\n          // padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer></footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n"],"sourceRoot":""}