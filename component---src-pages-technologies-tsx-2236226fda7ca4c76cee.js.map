{"version":3,"sources":["webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/Card/Card.helpers.ts","webpack:///./src/pages/technologies.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components/CoverImage/CoverImage.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/AspectRatioBox/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@chakra-ui/core/dist/es/Image/index.js"],"names":["Item","id","featured","frontmatter","image","background","fit","Box","key","minWidth","mr","CoverImage","maxHeight","fluid","childImageSharp","boxShadow","Card","title","body","projects","illustration","htmlHeight","height","htmlWidth","width","alt","backgroundColor","useColorMode","colorMode","ratio","matchingProjects","nodes","filter","item","tech","includes","toLowerCase","getMatchingProjects","PseudoBox","display","gridTemplateColumns","gridTemplateRows","_before","content","gridColumn","gridRow","borderRadius","marginBottom","color","alignItems","overflow","AspectRatioBox","maxWidth","ml","Image","src","publicURL","loading","position","left","right","top","bottom","map","paddingY","paddingX","Heading","components","MDXComponents","pageQuery","Technologies","data","allMdx","posts","SEO","description","as","mt","marginX","px","fontWeight","Text","theme","space","l","m","p","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","passedMaxHeight","passedFit","passedBackground","restProps","Boolean","isObjectFitCover","undefined","objectFitmaxHeight","style","imgStyle","objectFit","_ref","_ref$ratio","children","props","child","only","pos","h","d","pb","w","React","useMDXComponents","mdx","useMDXScope","scope","mdxComponents","mdxScope","End","fullScope","keys","values","fn","NativeImage","ref","fallbackSrc","onError","onLoad","ignoreFallback","rest","hasLoaded","_props$enabled","enabled","isMounted","_useState","setHasLoaded","window","onload","event","current","onerror","useHasImageLoaded","imageProps","displayName"],"mappings":"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","file":"component---src-pages-technologies-tsx-2236226fda7ca4c76cee.js","sourcesContent":["import * as React from 'react';\nimport {\n  PseudoBox,\n  Box,\n  AspectRatioBox,\n  Image,\n  Heading,\n  useColorMode,\n} from '@chakra-ui/core';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport MDXComponents from '../MDXComponents/MDXComponents';\nimport { MDXProvider } from '@mdx-js/react';\nimport CoverImage from '../CoverImage/CoverImage';\nimport { getMatchingProjects } from './Card.helpers';\nimport { TechnologiesFrontmatterFragmentFragment } from '../../types';\n\nexport interface CardProps {\n  title: string;\n  body: any;\n  featured: TechnologiesFrontmatterFragmentFragment['featured'];\n  projects: any;\n}\n\nconst Item = ({ id, frontmatter: { featured } }) => {\n  const { image, background, fit } = featured;\n\n  return (\n    <Box key={id} minWidth=\"320px\" mr=\"16px\">\n      <CoverImage\n        maxHeight=\"260px\"\n        fit={fit}\n        background={background}\n        fluid={image.childImageSharp.fluid}\n        boxShadow=\"none\"\n      />\n    </Box>\n  );\n};\n\nconst Card: React.FC<CardProps> = ({ title, body, featured, projects }) => {\n  const {\n    illustration,\n    height: htmlHeight,\n    width: htmlWidth,\n    alt,\n    background,\n  } = featured;\n\n  const { colorMode } = useColorMode();\n\n  const backgroundColor = colorMode === 'light' ? ' #edf2f7' : '#2c3442';\n\n  const ratio = htmlWidth / htmlHeight;\n\n  const matchingProjects = getMatchingProjects(projects, title);\n\n  return (\n    <PseudoBox\n      display=\"grid\"\n      gridTemplateColumns={['0 1fr 0', '0 1fr 0', '64px 1fr 64px']}\n      gridTemplateRows=\"auto 8em 1fr auto\"\n      _before={{\n        content: `\"\"`,\n        gridColumn: '1/-1',\n        gridRow: '1/3',\n        background,\n        borderRadius: [0, 0, 8],\n      }}\n      marginBottom=\"80px\"\n    >\n      <Box\n        gridColumn=\"1 / 4\"\n        gridRow=\"1 / 2\"\n        color=\"#fff\"\n        height=\"320px\"\n        display=\"flex\"\n        alignItems=\"center\"\n        overflow=\"scroll\"\n      >\n        <AspectRatioBox\n          ratio={ratio}\n          maxWidth={96}\n          width=\"100%\"\n          ml=\"96px\"\n          mr=\"64px\"\n        >\n          <Image\n            maxHeight=\"100%\"\n            src={illustration.publicURL}\n            alt={alt}\n            htmlHeight={htmlHeight}\n            htmlWidth={htmlWidth}\n            loading=\"lazy\"\n          />\n        </AspectRatioBox>\n\n        <Box width=\"100%\" height=\"100%\" position=\"relative\">\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            position=\"absolute\"\n            left=\"0\"\n            right=\"0\"\n            top=\"0\"\n            bottom=\"0\"\n          >\n            {matchingProjects.map((item) => {\n              return <Item key={item.id} {...item} />;\n            })}\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        gridRow=\"2 / 4\"\n        gridColumn=\"2 / 3\"\n        paddingY=\"32px\"\n        paddingX={['16px', '32px', '32px']}\n        backgroundColor={backgroundColor}\n        borderRadius={['0 0 8px 8px', '0 0 8px 8px', 8]}\n      >\n        <Heading>{title}</Heading>\n\n        <MDXProvider components={MDXComponents}>\n          <MDXRenderer>{body}</MDXRenderer>\n        </MDXProvider>\n      </Box>\n    </PseudoBox>\n  );\n};\n\nexport default Card;\n","export const getMatchingProjects = (projects: any, title: string) => {\n  const getMatchedProject = (item) =>\n    item.frontmatter.tech.includes(title.toLowerCase());\n\n  return projects.nodes.filter(getMatchedProject);\n};\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport { theme } from '../utils/theme';\nimport SEO from '../components/SEO';\nimport { Heading, Text, Box } from '@chakra-ui/core';\nimport Card from '../components/Card/Card';\nimport { TechnologiesListQueryQuery } from '../types';\n\ninterface TechnologiesProps {\n  data: TechnologiesListQueryQuery;\n}\n\nconst Technologies: React.FC<TechnologiesProps> = ({\n  data: {\n    allMdx: { nodes },\n    projects,\n  },\n}) => {\n  const posts = nodes;\n\n  return (\n    <Layout>\n      <SEO title=\"Technologies\" description=\"Tech stack that I currently use\" />\n\n      <Heading\n        as=\"h1\"\n        mt=\"80px\"\n        marginX=\"auto\"\n        maxWidth=\"960px\"\n        px=\"16px\"\n        fontWeight={400}\n      >\n        <strong>Tech stack</strong> that I currently use\n      </Heading>\n\n      <Text mt={theme.space.l} marginX=\"auto\" maxWidth=\"960px\" px=\"16px\">\n        Passionate about TypeScript, React, NodeJS, GraphQL and statically typed\n        languages in general.\n      </Text>\n\n      <Box as=\"ol\" m=\"80px auto\" p={0} maxWidth=\"1080px\" px={[0, 0, '16px']}>\n        {posts.map(({ body, frontmatter }) => {\n          const { title, featured } = frontmatter;\n\n          return (\n            <Card\n              key={title}\n              title={title}\n              body={body}\n              featured={featured}\n              projects={projects}\n            />\n          );\n        })}\n      </Box>\n    </Layout>\n  );\n};\nexport const pageQuery = graphql`\n  fragment TechnologiesFrontmatterFragment on MdxFrontmatter {\n    featured {\n      illustration {\n        publicURL\n      }\n      background\n      width\n      height\n      alt\n    }\n    tags\n    kind\n    title\n  }\n\n  query TechnologiesListQuery {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/technologies/\" } }\n      sort: { fields: [frontmatter___order], order: ASC }\n    ) {\n      nodes {\n        id\n        body\n        frontmatter {\n          ...TechnologiesFrontmatterFragment\n        }\n        fields {\n          slug\n        }\n      }\n    }\n    projects: allMdx(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 72)\n        frontmatter {\n          title\n          company\n          git\n          link\n          kind\n          tech\n          featured {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 476) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            background\n            fit\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default Technologies;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import * as React from 'react';\nimport GatsbyImage from 'gatsby-image';\nimport { BoxProps } from '@chakra-ui/core';\nimport CoverImageWrapper from './CoverImageWrapper';\n\nconst CoverImage: React.FC<\n  BoxProps & { maxHeight: string; fit: string; fluid: any }\n> = ({\n  maxHeight: passedMaxHeight,\n  fit: passedFit,\n  fluid,\n  background: passedBackground,\n  ...restProps\n}) => {\n  const fit = Boolean(passedFit) ? passedFit : 'cover';\n\n  const isObjectFitCover = fit === 'cover';\n  const background = passedBackground ?? '#EDF2F7';\n\n  const fitProps: BoxProps = {\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  const width = isObjectFitCover ? '100%' : undefined;\n  const objectFitmaxHeight = isObjectFitCover ? undefined : passedMaxHeight;\n\n  return (\n    <CoverImageWrapper\n      background={background}\n      maxHeight={passedMaxHeight}\n      {...(isObjectFitCover && fitProps)}\n      {...restProps}\n    >\n      <GatsbyImage\n        fluid={fluid}\n        style={{ width }}\n        imgStyle={{\n          objectFit: fit,\n          maxHeight: objectFitmaxHeight,\n        }}\n      />\n    </CoverImageWrapper>\n  );\n};\n\nexport default CoverImage;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement } from \"react\";\nimport PseudoBox from \"../PseudoBox\";\n\nvar AspectRatioBox = function AspectRatioBox(_ref) {\n  var _ref$ratio = _ref.ratio,\n      ratio = _ref$ratio === void 0 ? 4 / 3 : _ref$ratio,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"ratio\", \"children\"]);\n\n  var child = Children.only(children);\n  return jsx(PseudoBox, _extends({\n    pos: \"relative\",\n    _before: {\n      h: 0,\n      content: \"\\\"\\\"\",\n      d: \"block\",\n      pb: 1 / ratio * 100 + \"%\"\n    }\n  }, props), cloneElement(child, {\n    pos: \"absolute\",\n    w: \"full\",\n    h: \"full\",\n    top: 0,\n    left: 0\n  }));\n};\n\nexport default AspectRatioBox;","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { useEffect, useState, forwardRef, useRef } from \"react\";\nimport Box from \"../Box\";\nexport function useHasImageLoaded(props) {\n  var src = props.src,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      _props$enabled = props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var isMounted = useRef(true);\n\n  var _useState = useState(false),\n      hasLoaded = _useState[0],\n      setHasLoaded = _useState[1];\n\n  useEffect(function () {\n    if (!src || !enabled) {\n      return;\n    }\n\n    var image = new window.Image();\n    image.src = src;\n\n    image.onload = function (event) {\n      if (isMounted.current) {\n        setHasLoaded(true);\n        onLoad && onLoad(event);\n      }\n    };\n\n    image.onerror = function (event) {\n      if (isMounted.current) {\n        setHasLoaded(false);\n        onError && onError(event);\n      }\n    };\n  }, [src, onLoad, onError, enabled]);\n  useEffect(function () {\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return hasLoaded;\n}\nvar NativeImage = forwardRef(function (_ref, ref) {\n  var htmlWidth = _ref.htmlWidth,\n      htmlHeight = _ref.htmlHeight,\n      alt = _ref.alt,\n      props = _objectWithoutPropertiesLoose(_ref, [\"htmlWidth\", \"htmlHeight\", \"alt\"]);\n\n  return jsx(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, props));\n});\nvar Image = forwardRef(function (props, ref) {\n  var src = props.src,\n      fallbackSrc = props.fallbackSrc,\n      onError = props.onError,\n      onLoad = props.onLoad,\n      ignoreFallback = props.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(props, [\"src\", \"fallbackSrc\", \"onError\", \"onLoad\", \"ignoreFallback\"]);\n\n  var hasLoaded = useHasImageLoaded({\n    src: src,\n    onLoad: onLoad,\n    onError: onError,\n    enabled: !Boolean(ignoreFallback)\n  });\n  var imageProps = ignoreFallback ? {\n    src: src,\n    onLoad: onLoad,\n    onError: onError\n  } : {\n    src: hasLoaded ? src : fallbackSrc\n  };\n  return jsx(Box, _extends({\n    as: NativeImage,\n    ref: ref\n  }, imageProps, rest));\n});\nImage.displayName = \"Image\";\nexport default Image;"],"sourceRoot":""}