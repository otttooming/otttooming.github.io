{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/constants/tech.ts","webpack:///./src/templates/Project.tsx"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","Tech","techTags","ESNEXT","title","url","TYPESCRIPT","GRAPHQL","NODEJS","REACT","BACKBONEJS","APOLLO","PRISMA","ES6","ES5","TWIG","SCSS","REDUX","REST","JQUERY","LIQUID","VUE","MJML","ILLUSTRATOR","PHOTOSHOP","Wrapper","pageQuery","Project","data","frontmatter","featured","image","background","fit","SEO","description","CoverImage","maxWidth","m","maxHeight","fluid","childImageSharp","Box","as","mt","mx","Link","href","link","display","Logo","name","company","Heading","fontWeight","theme","space","s","textMap","kind","projectTexts","TagList","tags","getMappedTags","tech","MDXComponents","body"],"mappings":"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","file":"component---src-templates-project-tsx-c9639d5dd944f75f5e80.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import { TagMap } from '../components/TagList/tagMap';\n\nexport enum Tech {\n  ESNEXT = 'esnext',\n  TYPESCRIPT = 'typescript',\n  GRAPHQL = 'graphql',\n  NODEJS = 'nodejs',\n  REACT = 'react',\n  BACKBONEJS = 'backbonejs',\n  APOLLO = 'apollo',\n  PRISMA = 'prisma',\n  ES6 = 'es6',\n  ES5 = 'es5',\n  TWIG = 'twig',\n  SCSS = 'scss',\n  REDUX = 'redux',\n  REST = 'rest',\n  JQUERY = 'jquery',\n  LIQUID = 'liquid',\n  VUE = 'vue',\n  MJML = 'mjml',\n  ILLUSTRATOR = 'illustrator',\n  PHOTOSHOP = 'photoshop',\n}\n\nexport const techTags: TagMap = {\n  [Tech.ESNEXT]: {\n    title: 'ESNext',\n    url: '/',\n  },\n  [Tech.TYPESCRIPT]: {\n    title: 'TypeScript',\n    url: '/',\n  },\n  [Tech.GRAPHQL]: {\n    title: 'GraphQL',\n    url: '/',\n  },\n  [Tech.NODEJS]: {\n    title: 'NodeJS',\n    url: '/',\n  },\n  [Tech.REACT]: {\n    title: 'React',\n    url: '/',\n  },\n  [Tech.BACKBONEJS]: {\n    title: 'Backbone.js',\n    url: '/',\n  },\n  [Tech.APOLLO]: {\n    title: 'Apollo',\n    url: '/',\n  },\n  [Tech.PRISMA]: {\n    title: 'Prisma',\n    url: '/',\n  },\n  [Tech.ES6]: {\n    title: 'ES6',\n    url: '/',\n  },\n  [Tech.ES5]: {\n    title: 'ES5',\n    url: '/',\n  },\n  [Tech.TWIG]: {\n    title: 'Twig',\n    url: '/',\n  },\n  [Tech.SCSS]: {\n    title: 'SCSS',\n    url: '/',\n  },\n  [Tech.REDUX]: {\n    title: 'Redux',\n    url: '/',\n  },\n  [Tech.REST]: {\n    title: 'REST',\n    url: '/',\n  },\n  [Tech.JQUERY]: {\n    title: 'jQuery',\n    url: '/',\n  },\n  [Tech.LIQUID]: {\n    title: 'Liquid',\n    url: '/',\n  },\n  [Tech.VUE]: {\n    title: 'Vue.js',\n    url: '/',\n  },\n  [Tech.MJML]: {\n    title: 'MJML',\n    url: '/',\n  },\n  [Tech.ILLUSTRATOR]: {\n    title: 'Adobe Illustrator',\n    url: '/',\n  },\n  [Tech.PHOTOSHOP]: {\n    title: 'Adobe Photoshop',\n    url: '/',\n  },\n};\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Layout from '../components/layout';\nimport styled from '@emotion/styled';\nimport TagList from '../components/TagList/TagList';\nimport { textMap, projectTexts } from '../utils/textMap';\nimport Logo from '../components/Logo/Logo';\nimport SEO from '../components/SEO';\nimport { Heading, Link, Box } from '@chakra-ui/core';\nimport MDXComponents from '../components/MDXComponents/MDXComponents';\nimport CoverImage from '../components/CoverImage/CoverImage';\nimport { getMappedTags } from '../components/TagList/tagMap';\nimport { techTags } from '../constants/tech';\nimport { theme } from '../utils/theme';\n\nexport interface PostProps {\n  data: any;\n}\n\nconst Wrapper = styled.div`\n  margin-top: 80px;\n  margin-bottom: 80px;\n\n  > * {\n    max-width: 960px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .gatsby-resp-image-wrapper {\n    width: 100%;\n  }\n\n  .gatsby-resp-image-wrapper > picture {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .gatsby-resp-image-wrapper > picture img {\n    width: 100%;\n  }\n`;\n\nconst Project: React.FC<PostProps> = ({ data: { mdx } }) => {\n  const { image, background, fit } = mdx.frontmatter.featured;\n\n  return (\n    <Layout>\n      <SEO title={mdx.frontmatter.title} description=\"\" />\n\n      <CoverImage\n        maxWidth=\"1024px\"\n        m=\"80px auto 0\"\n        maxHeight=\"70vh\"\n        fit={fit}\n        background={background}\n        fluid={image.childImageSharp.fluid}\n      />\n\n      <Box as=\"header\" mt=\"80px\" mx=\"auto\" maxWidth=\"960px\">\n        <Link href={mdx.frontmatter.link} display=\"block\">\n          <Logo name={mdx.frontmatter.company} />\n        </Link>\n\n        <Heading as=\"h1\" fontWeight={400} mt={theme.space.s}>\n          <strong>{mdx.frontmatter.title}</strong>{' '}\n          {textMap(mdx.frontmatter.kind, projectTexts)}\n        </Heading>\n\n        <TagList tags={getMappedTags(mdx.frontmatter.tech, techTags)} />\n      </Box>\n\n      <Wrapper>\n        <MDXProvider components={MDXComponents}>\n          <MDXRenderer>{mdx.body}</MDXRenderer>\n        </MDXProvider>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Project;\n\nexport const pageQuery = graphql`\n  query ProjectPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        company\n        git\n        link\n        kind\n        tech\n        featured {\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1024) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          background\n          fit\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}